input {

  udp {
    port  => 5000
    codec => json
  }

  tcp {
    port  => 5000
    codec => json
  }

  tcp {
    port => 5001
  }

  udp {
    port => 5001
  }

}

input {
  file {
    path => "/opt/logstash/general/fixtures/message_types/execution_report.txt"
    start_position => "beginning"
    sincedb_path => "/dev/null"
  }
}

filter {
  if [docker][image] =~ /^logstash/ {
    drop { }
  }
}


filter {
  if [message]
    and [message] =~ /^8\=FIX/ {

      mutate {
        add_tag => [ "FIXSTRING" ]
      }

      grok {
        match => ["message", "%{GREEDYDATA:fix_string}"]
        # match => ["message","%{TIMESTAMP_ISO8601:timestamp} %{GREEDYDATA:fix_session}: %{GREEDYDATA:fix_string}"]
      }
      fix_protocol {
        fix_message => fix_string
        # session_dictionary_path => "/opt/logstash/general/fixtures/FIXT11.xml"
        data_dictionary_path => "/opt/logstash/general/fixtures/FIX42.xml"
      }

  }
}


filter {
  if [docker][image] {
    # create a shortened docker.image VENV_NAME

  }
}

output {
  elasticsearch {
    hosts    => [ 'elasticsearch' ]
    user     => 'elastic'
    password => 'changeme'
  }
 stdout { codec => json }

}
